#include <stdio.h>


void recursiveShuffle(int arr[], int left, int right) {
    if (left < right) {
        int mid = left + (right - left) / 2;

        
        recursiveShuffle(arr, left, mid);
        recursiveShuffle(arr, mid + 1, right);

        int i = left;
        int j = mid + 1;

        
        while (i <= mid && j <= right) {
           
            while (i <= mid && arr[i] % 2 != 0) {
                i++;
            }
            while (j <= right && arr[j] % 2 == 0) {
                j++;
            }

            
            if (i <= mid && j <= right) {
                int temp = arr[j];
                for (int k = j; k > i; k--) {
                    arr[k] = arr[k - 1];
                }
                arr[i] = temp;
                i++;
                j++;
                mid++;
            }
        }
    }
}

void iterativeShuffle(int arr[], int n) {
    int i = 0;
    int j = 0;

    
    while (i < n) {
        
        if (arr[i] % 2 == 0) {
            i++;
        } else {
            
            int temp = arr[i];
            for (int k = i; k > j; k--) {
                arr[k] = arr[k - 1];
            }
            arr[j] = temp;
            i++;
            j++;
        }
    }
}

int main() {
    
    int arr[] = {1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096};
    int n = sizeof(arr) / sizeof(arr[0]);

    
    recursiveShuffle(arr, 0, n - 1);

    printf("Recursive Shuffled array: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

  
    int arr2[] = {1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096};

    
    iterativeShuffle(arr2, n);

    printf("Iterative Shuffled array: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", arr2[i]);
    }

    return 0;
}
